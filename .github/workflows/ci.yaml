name: Continuous Integration

on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  # Build cli and harnesses
  build-go:
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest] #  windows-latest - like 8x slower. Excluded for now since we're just building.
    runs-on: ${{ matrix.os }}
    steps:
      - name: Print build information
        run: 'echo head_ref: ${{ github.head_ref }}, ref: ${{ github.ref }}, os: ${{ matrix.os }}'
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.17'

      - run: go build

  build-ts:
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest] #  windows-latest - like 8x slower. Excluded for now since we're just building.
    runs-on: ${{ matrix.os }}
    steps:
      - name: Print build information
        run: 'echo head_ref: ${{ github.head_ref }}, ref: ${{ github.ref }}, os: ${{ matrix.os }}'
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2

      - run: npm ci
      - run: npm run build
      - run: npm run lint

  build-python:
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest] #  windows-latest - like 8x slower. Excluded for now since we're just building.
    runs-on: ${{ matrix.os }}
    steps:
      - name: Print build information
        run: 'echo head_ref: ${{ github.head_ref }}, ref: ${{ github.ref }}, os: ${{ matrix.os }}'
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: '3.10'
      - run: python -m pip install --upgrade wheel poetry poethepoet
      - run: poetry install --no-root
      - run: poe lint

  build-java:
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest] #  windows-latest - like 8x slower. Excluded for now since we're just building.
    runs-on: ${{ matrix.os }}
    steps:
      - name: Print build information
        run: 'echo head_ref: ${{ github.head_ref }}, ref: ${{ github.ref }}, os: ${{ matrix.os }}'
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - run: ./gradlew build

  feature-tests-ts:
    uses: ./.github/workflows/typescript.yaml
    with:
      version: 1.4.4
      version-is-repo-ref: false

  feature-tests-go:
    uses: ./.github/workflows/go.yaml
    with:
      version: v1.18.1
      version-is-repo-ref: false

  feature-tests-python:
    uses: ./.github/workflows/python.yaml
    with:
      version: 0.1b3
      version-is-repo-ref: false

  feature-tests-java:
    uses: ./.github/workflows/java.yaml
    with:
      version: v1.17.0
      version-is-repo-ref: false

  build-go-latest-docker-images:
    uses: ./.github/workflows/docker-images.yaml
    secrets: inherit
    with:
      lang: go
      # Latest release at the time this was written
      # TODO(bergundy): Find some way to automatically upgrade to "latest"
      sdk-version: 'v1.18.1'
      semver-latest: major
      run-tag: '1.18.1'

  build-node-latest-docker-images:
    uses: ./.github/workflows/docker-images.yaml
    secrets: inherit
    with:
      lang: ts
      # Latest release at the time this was written
      # TODO(bergundy): Find some way to automatically upgrade to "latest"
      sdk-version: 'v1.4.4'
      semver-latest: major
      run-tag: '1.4.4'

  build-java-latest-docker-images:
    uses: ./.github/workflows/docker-images.yaml
    secrets: inherit
    with:
      lang: java
      # Latest release at the time this was written
      # TODO(bergundy): Find some way to automatically upgrade to "latest"
      sdk-version: 'v1.17.0'
      semver-latest: major
      run-tag: '1.17.0'

  build-python-latest-docker-images:
    uses: ./.github/workflows/docker-images.yaml
    secrets: inherit
    with:
      lang: py
      # Latest release at the time this was written
      # TODO(bergundy): Find some way to automatically upgrade to "latest"
      sdk-version: 'v0.1b3'
      semver-latest: none
      run-tag: '0.1b3'
