plugins {
    id 'java'
    id 'com.diffplug.spotless' version '6.18.0'
}

group 'io.temporal'
version '0.1.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_1_10
    targetCompatibility = JavaVersion.VERSION_1_10
}

repositories {
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
    mavenCentral()
}

spotless {
    ratchetFrom 'origin/main'
    java {
        googleJavaFormat('1.16.0')
    }
}

ext {
    def fetchLatestVersion = {
        def url = 'https://api.github.com/repos/temporalio/sdk-java/releases/latest'
        def connection = new URL(url).openConnection()
        connection.setRequestProperty("Accept", "application/vnd.github.v3+json")

        // Read the entire response as a single string
        def response = connection.inputStream.text

        // Use a regular expression to find the tag_name value
        def matcher = (response =~ /"tag_name"\s*:\s*"(.*?)"/)
        if (matcher.find()) {
            def version = matcher.group(1).replaceFirst("^v", "")
            println "Fetched latest SDK version: ${version}"
            return version
        } else {
            throw new Exception("Failed to extract tag_name from GitHub response")
        }
    }
    
    // Default fallback version in case fetching the latest version fails
    latestSdkVersion = "1.0.0"
    try {
        latestSdkVersion = fetchLatestVersion()
    } catch (Exception e) {
        println "Failed to fetch latest SDK version; using fallback: ${latestSdkVersion}"
    }
}


dependencies {
    implementation 'ch.qos.logback:logback-classic:1.2.9'
    implementation 'com.google.guava:guava:31.0.1-jre'
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'com.jayway.jsonpath:json-path:2.6.0'
    implementation 'info.picocli:picocli:4.6.2'
    implementation "io.temporal:temporal-sdk:${latestSdkVersion}"
    implementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    implementation 'org.reflections:reflections:0.10.2'
}

sourceSets {
    main {
        java {
            srcDirs = ['features', 'harness/java']
        }
        // Use the same dirs for resources
        resources {
            srcDirs = ['features', 'harness/java']
        }
    }
}
