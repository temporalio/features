name: Continuous Integration

on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  # Build cli and harnesses
  build-go:
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest] #  windows-latest - like 8x slower. Excluded for now since we're just building.
    runs-on: ${{ matrix.os }}
    steps:
      - name: Print build information
        run: 'echo head_ref: ${{ github.head_ref }}, ref: ${{ github.ref }}, os: ${{ matrix.os }}'
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.17'

      - run: go build

  build-ts:
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest] #  windows-latest - like 8x slower. Excluded for now since we're just building.
    runs-on: ${{ matrix.os }}
    steps:
      - name: Print build information
        run: 'echo head_ref: ${{ github.head_ref }}, ref: ${{ github.ref }}, os: ${{ matrix.os }}'
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2

      - run: npm ci
      - run: npm run build
      - run: npm run lint

  build-python:
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest] #  windows-latest - like 8x slower. Excluded for now since we're just building.
    runs-on: ${{ matrix.os }}
    steps:
      - name: Print build information
        run: 'echo head_ref: ${{ github.head_ref }}, ref: ${{ github.ref }}, os: ${{ matrix.os }}'
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: '3.10'
      - run: python -m pip install --upgrade wheel poetry poethepoet
      - run: poetry install --no-root
      - run: poe lint

  build-java:
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest] #  windows-latest - like 8x slower. Excluded for now since we're just building.
    runs-on: ${{ matrix.os }}
    steps:
      - name: Print build information
        run: 'echo head_ref: ${{ github.head_ref }}, ref: ${{ github.ref }}, os: ${{ matrix.os }}'
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - run: ./gradlew build

  feature-tests-ts:
    uses: ./.github/workflows/typescript.yaml
    with:
      version: 1.5.2
      version-is-repo-ref: false
      sdk-features-repo-ref: ${{ github.head_ref }}
      sdk-features-repo-path: ${{ github.event.pull_request.head.repo.full_name }}

  feature-tests-go:
    uses: ./.github/workflows/go.yaml
    with:
      version: v1.19.0
      version-is-repo-ref: false
      sdk-features-repo-ref: ${{ github.head_ref }}
      sdk-features-repo-path: ${{ github.event.pull_request.head.repo.full_name }}

  feature-tests-python:
    uses: ./.github/workflows/python.yaml
    with:
      version: 0.1b4
      version-is-repo-ref: false
      sdk-features-repo-ref: ${{ github.head_ref }}
      sdk-features-repo-path: ${{ github.event.pull_request.head.repo.full_name }}

  feature-tests-java:
    uses: ./.github/workflows/java.yaml
    with:
      version: v1.17.0
      version-is-repo-ref: false
      sdk-features-repo-ref: ${{ github.head_ref }}
      sdk-features-repo-path: ${{ github.event.pull_request.head.repo.full_name }}

  build-docker-images:
    uses: ./.github/workflows/all-docker-images.yaml
    secrets: inherit
    # TODO: Find some way to automatically upgrade to "latest"
    with:
      do-push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
      go-ver: 'v1.19.0'
      ts-ver: 'v1.5.2'
      java-ver: 'v1.17.0'
      py-ver: 'v0.1b4'
